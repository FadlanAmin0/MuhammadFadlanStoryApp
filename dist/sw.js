const CACHE_NAME="story-app-v1",assetsToCache=["/","/index.html","/app.bundle.js","/app.css","/manifest.json","/favicon.png","/images/logo.png","/images/placeholder.png","/images/icons/icon-48x48.png","/images/icons/icon-72x72.png","/images/icons/icon-96x96.png","/images/icons/icon-128x128.png","/images/icons/icon-144x144.png","/images/icons/icon-152x152.png","/images/icons/icon-192x192.png","/images/icons/icon-384x384.png","/images/icons/icon-512x512.png"];self.addEventListener("install",(e=>{console.log("üîß Service Worker: Installing..."),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("üì¶ Caching app shell and content"),e.addAll(assetsToCache)))).catch((e=>{console.error("‚ùå Error caching app shell:",e)}))),self.skipWaiting()})),self.addEventListener("activate",(e=>(console.log("üöÄ Service Worker: Activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.filter((e=>e!==CACHE_NAME)).map((e=>(console.log("üóëÔ∏è Deleting old cache:",e),caches.delete(e)))))))),self.clients.claim()))),self.addEventListener("push",(e=>{console.log("üì¨ Push event received:",e);let t={title:"Story berhasil dibuat",body:"Anda telah membuat story baru",icon:"/icons/icon-192x192.png",badge:"/icons/badge-72x72.png",tag:"story-notification",requireInteraction:!1,data:{url:"/"}};if(e.data)try{const o=e.data.json();console.log("üì® Push data (JSON):",o),t={...t,title:o.title||t.title,body:o.options?.body||o.body||t.body,icon:o.options?.icon||o.icon||t.icon,badge:o.options?.badge||o.badge||t.badge,tag:o.options?.tag||o.tag||t.tag,data:o.data||t.data}}catch(o){try{const o=e.data.text();console.log("üì® Push data (text):",o),o&&o.trim()&&(t.body=o)}catch(e){console.error("‚ùå Error parsing push data as text:",e)}}const o=self.registration.showNotification(t.title,{body:t.body,icon:t.icon,badge:t.badge,tag:t.tag,requireInteraction:t.requireInteraction,data:t.data,actions:[{action:"view",title:"üëÄ Lihat"},{action:"close",title:"‚ùå Tutup"}]}).catch((e=>(console.error("‚ùå Error showing notification:",e),self.registration.showNotification("Story App",{body:"Anda memiliki notifikasi baru",tag:"fallback-notification"}))));e.waitUntil(o)})),self.addEventListener("notificationclick",(e=>{if(console.log("üîî Notification clicked:",e),e.notification.close(),"view"===e.action||!e.action){const t=e.notification.data?.url||"/";e.waitUntil(self.clients.matchAll({type:"window"}).then((e=>{for(let t=0;t<e.length;t++){const o=e[t];if(o.url.includes(self.location.origin)&&"focus"in o)return o.focus()}if(self.clients.openWindow)return self.clients.openWindow(t)})))}})),self.addEventListener("fetch",(e=>{e.request.url.startsWith("chrome-extension://")||(e.request.url.includes("dicoding.dev")?e.respondWith(fetch(e.request).then((e=>e)).catch((t=>(console.error("‚ùå API fetch failed:",t),caches.match(e.request).then((e=>e||new Response(JSON.stringify({error:"Network error"}),{headers:{"Content-Type":"application/json"}}))))))):e.respondWith(caches.match(e.request).then((t=>t?(console.log("üì¶ Serving from cache:",e.request.url),t):(console.log("üåê Fetching from network:",e.request.url),fetch(e.request).then((t=>{if(404===t.status&&e.request.url.match(/\.(jpg|jpeg|png|gif|webp)/i))return console.log("üñºÔ∏è Image not found, using placeholder:",e.request.url),caches.match("/images/placeholder.png");if(200===t.status&&"GET"===e.request.method){const o=t.clone();caches.open(CACHE_NAME).then((t=>{t.put(e.request,o)}))}return t}))))).catch((t=>(console.error("‚ùå Fetch failed:",t),e.request.url.match(/\.(jpg|jpeg|png|gif|webp)/i)?caches.match("/images/placeholder.png"):new Response("Offline - Content not available"))))))}));